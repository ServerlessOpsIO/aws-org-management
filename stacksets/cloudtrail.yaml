AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: AWS account infrastructure stackset (cloudtrail)

Parameters:
  TargetOuIds:
    Type: CommaDelimitedList
    Description: List of OUs
  TargetRegions:
    Type: CommaDelimitedList
    Description: Regions to deploy to

Resources:
  OrgCloudtrail:
    Type: AWS::CloudFormation::StackSet
    Properties:
      StackSetName: OrgCloudtrail
      Description: Cloudtrail Configuration
      StackInstancesGroup:
        - DeploymentTargets:
            OrganizationalUnitIds: !Ref TargetOuIds
          Regions: !Ref TargetRegions
      AutoDeployment:
        Enabled: True
        RetainStacksOnAccountRemoval: True
      ManagedExecution:
        Active: true
      OperationPreferences:
        RegionConcurrencyType: PARALLEL
        FailureToleranceCount: 1
        MaxConcurrentCount: 5
      PermissionModel: SERVICE_MANAGED
      Capabilities:
        - CAPABILITY_IAM
      Parameters:
        - ParameterKey: GlobalEvents
          ParameterValue: "true"
        - ParameterKey: LoggingEnabled
          ParameterValue: "true"
        - ParameterKey: MultiRegion
          ParameterValue: "true"
      TemplateBody: |
        AWSTemplateFormatVersion: '2010-09-09'
        Description: AWS account infrastructure (cloudtrail)
        Parameters:
          GlobalEvents:
            Type: "String"
            Description: "Whether the trail is publishing events from global services, such as IAM, to the log files."
          LoggingEnabled:
            Type: "String"
            Description: 'Whether logging is enabled'
          MultiRegion:
            Type: "String"
            Description: "Whether the CloudTrail trail is created in the region in which you create the stack or in all regions."

        Resources:
          S3Bucket:
            Type: 'AWS::S3::Bucket'
            DependsOn: CloudWatchLogs
            Properties:
              BucketName: !Sub "aws-cloudtrail-${AWS::AccountId}-${AWS::Region}"

          S3BucketPolicy:
            Type: 'AWS::S3::BucketPolicy'
            Properties:
              Bucket:
                Ref: S3Bucket
              PolicyDocument:
                Statement:
                  - Action: "s3:GetBucketAcl"
                    Effect: "Allow"
                    Resource:
                      Fn::GetAtt:
                        - S3Bucket
                        - Arn
                    Principal:
                      Service: "cloudtrail.amazonaws.com"
                  - Action: "s3:PutObject"
                    Effect: "Allow"
                    Resource:
                      Fn::Join:
                        - '/'
                        - - Fn::GetAtt:
                              - S3Bucket
                              - Arn
                          - 'AWSLogs'
                          - '*'
                    Principal:
                      Service: "cloudtrail.amazonaws.com"
                    Condition:
                      StringEquals:
                        s3:x-amz-acl: "bucket-owner-full-control"

          SnsTopic:
            Type: 'AWS::SNS::Topic'
            DependsOn:
              - CloudWatchLogs
              - S3BucketPolicy
            Properties:
              DisplayName: 'CloudTrail Events'

          SnsTopicPolicy:
            Type: 'AWS::SNS::TopicPolicy'
            DependsOn:
              - CloudWatchLogs
              - S3BucketPolicy
            Properties:
              PolicyDocument:
                Statement:
                  Effect: "Allow"
                  Principal:
                    Service: "cloudtrail.amazonaws.com"
                  Action: "SNS:Publish"
                  Resource:
                    Ref: SnsTopic
              Topics:
                - Ref: SnsTopic

          CloudWatchLogs:
            Type: "AWS::Logs::LogGroup"
            Properties:
              RetentionInDays: 30

          CloudWatchLogsRole:
            Type: 'AWS::IAM::Role'
            Properties:
              AssumeRolePolicyDocument:
                Statement:
                  - Effect: "Allow"
                    Principal:
                      Service: "cloudtrail.amazonaws.com"
                    Action: "sts:AssumeRole"
              Policies:
                - PolicyName: "CloudWatchLogs"
                  PolicyDocument:
                    Statement:
                      - Action:
                          - "logs:CreateLogStream"
                          - "logs:PutLogEvents"
                        Effect: "Allow"
                        Resource:
                          - Fn::GetAtt:
                            - CloudWatchLogs
                            - Arn

          CloudTrail:
            Type: 'AWS::CloudTrail::Trail'
            DependsOn: SnsTopicPolicy
            Properties:
              CloudWatchLogsLogGroupArn:
                Fn::GetAtt:
                  - CloudWatchLogs
                  - Arn
              CloudWatchLogsRoleArn:
                Fn::GetAtt:
                  - CloudWatchLogsRole
                  - Arn
              EnableLogFileValidation: true
              IncludeGlobalServiceEvents:
                Ref: GlobalEvents
              IsLogging:
                Ref: LoggingEnabled
              IsMultiRegionTrail:
                Ref: MultiRegion
              S3BucketName:
                Ref: S3Bucket
              SnsTopicName:
                Ref: SnsTopic
